--GROUP BY 練習
SELECT DISTINCT  EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME, COUNT (EMP.EMPLOYEE_ID) AS "ID"
FROM EMPLOYEES EMP, DEPARTMENTS DEP
WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID
GROUP BY EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME ;

SELECT DISTINCT EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME, COUNT (EMP.EMPLOYEE_ID) AS "ID"
FROM EMPLOYEES EMP 
RIGHT JOIN DEPARTMENTS DEP ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID
GROUP BY EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME ;

--練習9-1
SELECT PLACE,
COUNT(PLACE) AS 地區總比數,
MAX(CHLORINE) AS 最大自由有效餘氯,
MIN(CHLORINE) AS 最小自由有效餘氯,
SUM(HYDROGEN) AS 氫離子濃度指數總和,
AVG(TURBIDITY) AS 濁度
FROM WATER1
WHERE PLACE IN ('T40', 'T44', 'T16') 
group by PLACE;

--練習9-2
SELECT distinct TOWNSHIP AS 行政地區, COUNT(WAT.PLACE) AS 地區總筆數, AVG(WAT.TURBIDITY) 濁度平均
FROM SQL_TAOYUAN_REGIONS REG
WHERE serial in (
SELECT PLACE, AVG(WAT.TURBIDITY)
FROM SQL_TAOYUAN_WATER WAT
GROUP BY PLACE
HAVING AVG(TURBIDITY) > 0.7
 )
 ;
 
select * from SQL_TAOYUAN_WATER
select * from SQL_TAOYUAN_REGIONS


SELECT reg.township AS 行政地區, COUNT(wat.PLACE) AS 地區總比數, AVG(wat.TURBIDITY) AS 濁度平均
FROM SQL_TAOYUAN_REGIONS reg
LEFT JOIN SQL_TAOYUAN_WATER wat ON reg.SERIAL = wat.PLACE
GROUP BY reg.township
HAVING AVG(wat.TURBIDITY) > 0.7;

select * from SQL_TAOYUAN_REGIONS

SELECT reg.TOWNSHIP  AS 行政地區, COUNT(wat.PLACE) AS 地區總比數, AVG(wat.TURBIDITY) AS 濁度平均
    FROM SQL_TAOYUAN_REGIONS reg
    LEFT JOIN SQL_TAOYUAN_WATER wat ON reg.SERIAL = wat.PLACE
    WHERE reg.serial in(
        SELECT distinct PLACE
        FROM SQL_TAOYUAN_WATER
    )
GROUP BY reg.township
HAVING AVG(wat.TURBIDITY) > 0.7;

CREATE TABLE SQL_EMP_HIS AS SELECT * FROM SQL_EMP
TRUNCATE TABLE SQL_EMP_HIS;

INSERT INTO SQL_EMP_HIS
SELECT EMP_ID, EMP_NM, ID, null, '資訊板塊'
FROM SQL_EMP
WHERE EMP_ID = '00012345';

UPDATE SQL_EMP_HIS
 SET DEP = '資訊';

--練習10 
CREATE TABLE PRACTICE_EMP_0055 AS SELECT * FROM SQL_EMP;
TRUNCATE TABLE PRACTICE_EMP_0055;
--Q1
INSERT INTO PRACTICE_EMP_0055 (EMP_ID, EMP_NM, ID, TEL, DEP)
VALUES('E7310055', '林昊磊', 'H123456789', '1000#1010', '資訊部');
--Q2
UPDATE PRACTICE_EMP_0055
SET ID = 'H987654321', TEL = '9999#9999'
WHERE EMP_ID = 'E7310055';
--Q3
DELETE FROM PRACTICE_EMP_0055
WHERE EMP_ID = 'E7310055';

SELECT LAST_NAME
FROM EMPLOYEES
WHERE SALARY >
(
SELECT SALARY FROM EMPLOYEES
WHERE LAST_NAME = 'Abel'
);

SELECT LAST_NAME, JOB_ID
FROM EMPLOYEES
WHERE JOB_ID =
(
SELECT JOB_ID
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 141
)
AND SALARY >
(
SELECT SALARY
FROM EMPLOYEES
WHERE EMPLOYEE_ID=141
)
;

SELECT LAST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE SALARY=
(
SELECT MIN(SALARY)
FROM EMPLOYEES
);

SELECT DEPARTMENT_ID, MIN(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MIN(SALARY)>
(
SELECT MIN(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50
);

SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_ID FROM EMPLOYEES
WHERE LOWER(LAST_NAME) = 'higgins';

--課後練習新增
INSERT INTO SQL_CUSTOMER (ID, NAME ,EMP) VALUES ('E199809', '林昊磊', '00055555');
INSERT INTO SQL_ORDER (ORDER_NO, CUST_ID, MONEY, ORDER_DATE, EMP_ID) VALUES ('2018010000014', '1998090700', '500', to_date('18-5月 -03','DD-MON-RR'),'E199809');
INSERT INTO SQL_ORDER_DETAIL (ORDER_NO, ITEM_NO, COUNT, MONEY) VALUES ('2018030000009', 'C0012', '2', '150');

--課後練習查詢
SELECT  STO.CUSTOMER_ID AS 客戶編號, STO.NM AS 客戶名稱, SUM(DET.COUNT) AS 購買次數, SUM(DET.MONEY) AS 購買金額 
FROM SQL_CUSTOMER_STORE STO
INNER JOIN SQL_ORDER ORD ON sto.customer_id = ord.cust_id  --INNER JOIN 比 LEFT 好，因為會去掉NULL值
INNER JOIN SQL_ORDER_DETAIL DET ON ord.order_no = det.order_no
INNER JOIN SQL_ITEM ITE ON DET.ITEM_NO = ITE.ITEM_NO
WHERE ite.item_name LIKE '%巧克力%'
GROUP BY STO.NM, STO.CUSTOMER_ID
ORDER BY STO.CUSTOMER_ID
;
